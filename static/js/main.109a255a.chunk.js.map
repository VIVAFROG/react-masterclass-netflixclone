{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Routes/Home.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","animate","initial","whileHover","xmlns","width","height","viewBox","path","d","to","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getLatestMovies","fetch","then","response","json","getTopRatedMovies","getUpcomingMovies","getLatestTvShow","getAiringTodayTvShow","getPopularTvShow","getTopRatedTvShow","makeImagePath","id","format","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","Slider","SliderTitle","Row","Box","Info","black","Overlay","BigMovie","BigCover","BigTitle","h3","BigOverview","BigReleasedDate","BigScore","rowVariants","hidden","window","outerWidth","visible","exit","boxVariants","scale","hover","y","delay","duration","infoVariants","opacity","Home","bigMovieMatch","useQuery","latestMovieData","isLatestMoviesLoading","isLoading","topRatedMoviesData","isTopRatedMoviesLoading","upComingMoviesData","isUpComingMoviesLoading","indexLatestMovie","setIndexLatestMovie","indexTopRatedMovie","setTopRatedMovie","indexUpComingMovie","setUpComingMovie","leaving","setLeaving","toggleLeaving","onBoxClicked","movieId","clickedMovie","params","results","find","movie","totalMovies","length","maxIndex","Math","floor","backdrop_path","title","overview","AnimatePresence","onExitComplete","slice","map","style","backgroundImage","release_date","vote_average","NextBtn","BigSearch","location","useLocation","URLSearchParams","search","bigSearchMatch","getSearch","searchResultData","isSearchLoading","indexLatestSearch","setIndexLatestSearch","increaseSearchIndex","totalSearch","console","log","clickedSearch","searchId","BigTv","Tv","latestTvData","isLatestTvLoading","airingTodayTvData","isAiringTodayTvLoading","popularTvData","isPopularTvLoading","topRatedTvData","isStopRatedTvLoading","bigTvMatch","indexLatestTv","setIndexLatestTv","indexAiringTodayTv","setAiringTodayTv","indexPopularTv","setPopularTv","indexTopRatedTv","setTopRatedTv","tvId","clickedTv","tv","totalTvs","name","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.109a255a.chunk.js","sourcesContent":["import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  font-size: 14px;\n  padding: 20px 60px;\n  color: white;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 2.5px;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useRouteMatch(\"/\");\n  const tvMatch = useRouteMatch(\"/tv\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n  const history = useHistory();\n  const { register, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {\n    history.push(`/search?keyword=${data.keyword}`);\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n        <Logo\n          variants={logoVariants}\n          whileHover=\"active\"\n          animate=\"normal\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1024\"\n          height=\"276.742\"\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n        </Logo>\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/tv\">\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -185 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show...\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","const API_KEY = \"10923b261ba94d897ac6b81148314a3f\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n//https://api.themoviedb.org/3/movie/now_playing?api_key=10923b261ba94d897ac6b81148314a3f\ninterface IMovie {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n  release_date: string;\n  vote_average: number;\n}\n\nexport interface IGetMoviesResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\ninterface ITv {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  name: string;\n  overview: string;\n  release_date: string;\n  vote_average: number;\n  type: string;\n  status: string;\n  tagline: string;\n}\n\ninterface ISearch {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  name: string;\n  title: string;\n  overview: string;\n  release_date: string;\n  vote_average: number;\n  type: string;\n  status: string;\n  tagline: string;\n}\n\nexport interface ISearchResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: ISearch[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport interface IGetTvsResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: ITv[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport function getLatestMovies() {\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getTopRatedMovies() {\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getUpcomingMovies() {\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getLatestTvShow() {\n  return fetch(`${BASE_PATH}/tv/on_the_air?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getAiringTodayTvShow() {\n  return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getPopularTvShow() {\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function getTopRatedTvShow() {\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getSearch(keyword?: string) {\n  return fetch(\n    `${BASE_PATH}/search/multi?api_key=${API_KEY}&query=${keyword}&page=1&include_adult=false`\n  ).then((response) => response.json());\n}\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport {\n  getLatestMovies,\n  getTopRatedMovies,\n  getUpcomingMovies,\n  IGetMoviesResult,\n} from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  height: 200px;\n  top: -100px;\n  margin-bottom: 40px; ;\n`;\n\nconst SliderTitle = styled.p`\n  font-size: 20px;\n  font-weight: 800;\n  padding: 5px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst BigReleasedDate = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst BigScore = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Home() {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n  const { scrollY } = useViewportScroll();\n\n  const { data: latestMovieData, isLoading: isLatestMoviesLoading } =\n    useQuery<IGetMoviesResult>([\"movie\", \"nowPlaying\"], getLatestMovies);\n  const { data: topRatedMoviesData, isLoading: isTopRatedMoviesLoading } =\n    useQuery<IGetMoviesResult>([\"movie\", \"latestMovies\"], getTopRatedMovies);\n  const { data: upComingMoviesData, isLoading: isUpComingMoviesLoading } =\n    useQuery<IGetMoviesResult>([\"movie\", \"topRatedMovies\"], getUpcomingMovies);\n\n  const [indexLatestMovie, setIndexLatestMovie] = useState(0);\n  const [indexTopRatedMovie, setTopRatedMovie] = useState(0);\n  const [indexUpComingMovie, setUpComingMovie] = useState(0);\n\n  const [leaving, setLeaving] = useState(false);\n\n  const increaseMoviesIndex = () => {\n    if (latestMovieData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = latestMovieData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndexLatestMovie((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n    if (topRatedMoviesData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = topRatedMoviesData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setTopRatedMovie((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n    if (upComingMoviesData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = upComingMoviesData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setUpComingMovie((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => history.push(\"/\");\n  const clickedMovie =\n    bigMovieMatch?.params.movieId &&\n    (latestMovieData?.results.find(\n      (movie) => movie.id === +bigMovieMatch.params.movieId\n    ) ||\n      topRatedMoviesData?.results.find(\n        (movie) => movie.id === +bigMovieMatch.params.movieId\n      ) ||\n      upComingMoviesData?.results.find(\n        (movie) => movie.id === +bigMovieMatch.params.movieId\n      ));\n\n  return (\n    <Wrapper>\n      {isLatestMoviesLoading &&\n      isTopRatedMoviesLoading &&\n      isUpComingMoviesLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={increaseMoviesIndex}\n            bgPhoto={makeImagePath(\n              latestMovieData?.results[0].backdrop_path || \"\"\n            )}\n          >\n            <Title>{latestMovieData?.results[0].title}</Title>\n            <Overview>{latestMovieData?.results[0].overview}</Overview>\n          </Banner>\n\n          <Slider>\n            <SliderTitle>Latest Movies</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={indexLatestMovie}\n              >\n                {latestMovieData?.results\n                  .slice(1)\n                  .slice(\n                    offset * indexLatestMovie,\n                    offset * indexLatestMovie + offset\n                  )\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <Slider>\n            <SliderTitle>Top Rated Movies</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={indexTopRatedMovie}\n              >\n                {topRatedMoviesData?.results\n                  .slice(1)\n                  .slice(\n                    offset * indexTopRatedMovie,\n                    offset * indexTopRatedMovie + offset\n                  )\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <Slider>\n            <SliderTitle>Upcoming Movies</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={indexUpComingMovie}\n              >\n                {upComingMoviesData?.results\n                  .slice(1)\n                  .slice(\n                    offset * indexUpComingMovie,\n                    offset * indexUpComingMovie + offset\n                  )\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.movieId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.title}</BigTitle>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                      <BigReleasedDate>\n                        {clickedMovie.release_date}\n                      </BigReleasedDate>\n                      <BigScore>{clickedMovie.vote_average} / 10</BigScore>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Home;\n","import { AnimatePresence, motion, useViewportScroll } from \"framer-motion\";\nimport { useLocation } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport { useQuery } from \"react-query\";\nimport { getSearch, ISearchResult } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Banner = styled.div`\n  //position: absolute;\n  height: 20vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n`;\n\nconst NextBtn = styled.div``;\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Slider = styled.div`\n  position: relative;\n  height: 200px;\n  top: 100px;\n  margin-bottom: 40px; ;\n`;\n\nconst SliderTitle = styled.p`\n  font-size: 20px;\n  font-weight: 800;\n  padding: 5px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigSearch = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst BigReleasedDate = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst BigScore = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\nfunction Search() {\n  const history = useHistory();\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\n\n  const bigSearchMatch =\n    useRouteMatch<{ searchId: string }>(\"/search/:searchId\");\n  const { scrollY } = useViewportScroll();\n\n  const { data: searchResultData, isLoading: isSearchLoading } =\n    useQuery<ISearchResult>(\"search\", () => getSearch(keyword + \"\"));\n\n  const [indexLatestSearch, setIndexLatestSearch] = useState(0);\n\n  const [leaving, setLeaving] = useState(false);\n\n  const increaseSearchIndex = () => {\n    if (searchResultData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalSearch = searchResultData.results.length - 1;\n      const maxIndex = Math.floor(totalSearch / offset) - 1;\n      setIndexLatestSearch((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (searchId: number) => {\n    history.push(`/search/${searchId}`);\n  };\n\n  console.log(searchResultData);\n\n  const onOverlayClick = () => history.push(\"/search\");\n  const clickedSearch =\n    bigSearchMatch?.params.searchId &&\n    searchResultData?.results.find(\n      (search) => search.id === +bigSearchMatch.params.searchId\n    );\n\n  return (\n    <Wrapper>\n      {isSearchLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <NextBtn onClick={increaseSearchIndex}>Next</NextBtn>\n          <Banner onClick={increaseSearchIndex}></Banner>\n          <Slider>\n            <SliderTitle>Search Result</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={indexLatestSearch}\n              >\n                {searchResultData?.results\n                  .slice(1)\n                  .slice(\n                    offset * indexLatestSearch,\n                    offset * indexLatestSearch + offset\n                  )\n                  .map((search) => (\n                    <Box\n                      layoutId={search.id + \"\"}\n                      key={search.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(search.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(search.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{search.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <AnimatePresence>\n            {bigSearchMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigSearch\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigSearchMatch.params.searchId}\n                >\n                  {clickedSearch && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedSearch.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedSearch.title}</BigTitle>\n                      <BigOverview>{clickedSearch.overview}</BigOverview>\n                      <BigReleasedDate>\n                        {clickedSearch.release_date}\n                      </BigReleasedDate>\n                      <BigScore>{clickedSearch.vote_average} / 10</BigScore>\n                    </>\n                  )}\n                </BigSearch>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Search;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\n\nimport { makeImagePath } from \"../utils\";\nimport { Key, ReactChild, ReactFragment, ReactPortal, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport {\n  getAiringTodayTvShow,\n  getLatestTvShow,\n  getPopularTvShow,\n  getTopRatedTvShow,\n  IGetTvsResult,\n} from \"../api\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  height: 200px;\n  top: -100px;\n  margin-bottom: 40px; ;\n`;\n\nconst SliderTitle = styled.p`\n  font-size: 20px;\n  font-weight: 800;\n  padding: 5px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigTv = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst BigReleasedDate = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst BigScore = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Tv() {\n  const { data: latestTvData, isLoading: isLatestTvLoading } =\n    useQuery<IGetTvsResult>([\"tv\", \"latestShows\"], getLatestTvShow);\n  const { data: airingTodayTvData, isLoading: isAiringTodayTvLoading } =\n    useQuery<IGetTvsResult>([\"tv\", \"airingToday\"], getAiringTodayTvShow);\n  const { data: popularTvData, isLoading: isPopularTvLoading } =\n    useQuery<IGetTvsResult>([\"tv\", \"popular\"], getPopularTvShow);\n  const { data: topRatedTvData, isLoading: isStopRatedTvLoading } =\n    useQuery<IGetTvsResult>([\"tv\", \"nowPlaying\"], getTopRatedTvShow);\n\n  const history = useHistory();\n  const bigTvMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\n  const { scrollY } = useViewportScroll();\n\n  const [indexLatestTv, setIndexLatestTv] = useState(0);\n  const [indexAiringTodayTv, setAiringTodayTv] = useState(0);\n  const [indexPopularTv, setPopularTv] = useState(0);\n  const [indexTopRatedTv, setTopRatedTv] = useState(0);\n\n  const [leaving, setLeaving] = useState(false);\n\n  const increaseTvIndex = () => {\n    if (latestTvData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvs = latestTvData.results.length - 1;\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\n      setIndexLatestTv((prev: number) => (prev === maxIndex ? 0 : prev + 1));\n    }\n    if (airingTodayTvData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvs = airingTodayTvData.results.length - 1;\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\n      setAiringTodayTv((prev: number) => (prev === maxIndex ? 0 : prev + 1));\n    }\n    if (popularTvData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvs = popularTvData.results.length - 1;\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\n      setPopularTv((prev: number) => (prev === maxIndex ? 0 : prev + 1));\n    }\n    if (topRatedTvData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvs = topRatedTvData.results.length - 1;\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\n      setTopRatedTv((prev: number) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    history.push(`/tv/${tvId}`);\n  };\n  const onOverlayClick = () => history.push(\"/tv\");\n  const clickedTv =\n    bigTvMatch?.params.tvId &&\n    (latestTvData?.results.find((tv) => tv.id === +bigTvMatch.params.tvId) ||\n      airingTodayTvData?.results.find(\n        (tv) => tv.id === +bigTvMatch.params.tvId\n      ) ||\n      popularTvData?.results.find((tv) => tv.id === +bigTvMatch.params.tvId) ||\n      topRatedTvData?.results.find((tv) => tv.id === +bigTvMatch.params.tvId));\n\n  return (\n    <Wrapper>\n      {isLatestTvLoading &&\n      isAiringTodayTvLoading &&\n      isPopularTvLoading &&\n      isStopRatedTvLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={increaseTvIndex}\n            bgPhoto={makeImagePath(\n              latestTvData?.results[0].backdrop_path || \"\"\n            )}\n          >\n            <Title>{latestTvData?.results[0].name}</Title>\n            <Overview>{latestTvData?.results[0].overview}</Overview>\n          </Banner>\n\n          <Slider>\n            <SliderTitle>Latest Shows</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={indexLatestTv}\n              >\n                {latestTvData?.results\n                  .slice(1)\n                  .slice(\n                    offset * indexLatestTv,\n                    offset * indexLatestTv + offset\n                  )\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <Slider>\n            <SliderTitle>Airing Today</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={indexAiringTodayTv}\n              >\n                {airingTodayTvData?.results\n                  .slice(1)\n                  .slice(\n                    offset * indexAiringTodayTv,\n                    offset * indexAiringTodayTv + offset\n                  )\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <Slider>\n            <SliderTitle>Popular</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={indexPopularTv}\n              >\n                {popularTvData?.results\n                  .slice(1)\n                  .slice(\n                    offset * indexPopularTv,\n                    offset * indexPopularTv + offset\n                  )\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <Slider>\n            <SliderTitle>Top Rated</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={indexTopRatedTv}\n              >\n                {topRatedTvData?.results\n                  .slice(1)\n                  .slice(\n                    offset * indexTopRatedTv,\n                    offset * indexTopRatedTv + offset\n                  )\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <AnimatePresence>\n            {bigTvMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigTv\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigTvMatch.params.tvId}\n                >\n                  {clickedTv && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedTv.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedTv.name}</BigTitle>\n                      <BigOverview>{clickedTv.overview}</BigOverview>\n                      <BigReleasedDate>\n                        {clickedTv.release_date}\n                      </BigReleasedDate>\n                      <BigScore>{clickedTv.vote_average} / 10</BigScore>\n                    </>\n                  )}\n                </BigTv>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Tv;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path={[\"/tv\", \"/tv/:tvId\"]}>\n          <Tv />\n        </Route>\n\n        <Route path={[\"/search\", \"/search/:searchId\"]}>\n          <Search />\n        </Route>\n\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}